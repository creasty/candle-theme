#!/usr/bin/env ruby

require 'yaml'
require 'erb'
require 'base64'


class Theme

  BASE_PATH = File.dirname __FILE__

  BPLIST = "bplist00\xD4\x01\x02\x03\x04\x05\x06\x15\x16X$versionX$objectsY$archiverT$top\x12\x00\x01\x86\xA0\xA3\a\b\x0FU$null\xD3\t\n\v\f\r\x0EUNSRGB\\NSColorSpaceV$classO\x10'%.10f %.10f %.10f\x00\x10\x01\x80\x02\xD2\x10\x11\x12\x13Z$classnameX$classesWNSColor\xA2\x12\x14XNSObject_\x10\x0FNSKeyedArchiver\xD1\x17\x18Troot\x80\x01\b\x11\x1A#-27;AHN[b\x8C\x8E\x90\x95\xA0\xA9\xB1\xB4\xBD\xCF\xD2\xD7\x00\x00\x00\x00\x00\x00\x01\x01\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xD9"

  attr_accessor :template

  def initialize
    @template_dir = File.join BASE_PATH, 'templates'
    @output_dir   = File.join BASE_PATH, '..'
  end

  def build(scheme_file)
    scheme_data = YAML.load File.read(scheme_file)
    populate_color scheme_data
    create_output_files
  end

  def populate_color(scheme_data)
    @color = {}

    scheme_data.each do |key, value|
      hex, code = value

      color = {
        hex:    hex,
        code:   code,
        hexbgr: hex.scan(/../).reverse.join,
        dhex:   hex.scan(/../).map { |color| color + color }.join,
        rgb:    hex.scan(/../).map { |color| color.to_i(16) },
        srgb:   hex.scan(/../).map { |color| color.to_i(16).to_f / 255 },
      }

      # Terminal.app color
      color[:termapp] = Base64.encode64(sprintf(BPLIST, *color[:srgb])).strip

      @color[key.to_sym] = color
    end
  end

  def create_output_files
    Dir.glob(File.join(@template_dir, '**', '*.erb')).each do |file|
      dir_name = File.basename File.dirname(file)
      file_name = File.basename file, '.erb'
      output_dir = File.join @output_dir, dir_name

      parsed = ERB.new File.read(file)
      contents = parsed.result binding

      make_dir output_dir

      File.open(File.join(output_dir, file_name), 'w') do |f|
        f.write contents
      end
    end
  end

  def make_dir(path)
    FileTest::directory?(path) || Dir::mkdir(path)
  end

end


Theme.new.build ARGV[0] || 'scheme.yml'
